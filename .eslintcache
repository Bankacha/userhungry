[{"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\index.js":"1","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\reportWebVitals.js":"2","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\App.js":"3","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\store\\reducers\\index.js":"4","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\store\\reducers\\polls.js":"5","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\layout\\AdminLayout.js":"6","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\public\\layout\\PublicLayout.js":"7","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\views\\AdminDashboard.js":"8","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\views\\Poll\\PollCreate.js":"9","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\views\\Poll\\PollPreview.js":"10","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\views\\Poll\\PollsList.js":"11","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\public\\components\\views\\PollVote.js":"12","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\public\\components\\views\\Vote.js":"13","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\api\\restaurants.js":"14","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\PollPreview\\PlaceAnOrder.js":"15","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\PollPreview\\RestaurantsList.js":"16","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\store\\actions\\pollsAction.js":"17","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\PollsList\\PollsListTable.js":"18","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\api\\polls.js":"19","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\api\\api.js":"20","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\api\\orders.js":"21","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\constants\\index.js":"22","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\public\\components\\views\\VoteResults.js":"23","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\views\\Restaurants\\Restaurants.js":"24"},{"size":816,"mtime":1607613472415,"results":"25","hashOfConfig":"26"},{"size":375,"mtime":1607596669086,"results":"27","hashOfConfig":"26"},{"size":525,"mtime":1607614822235,"results":"28","hashOfConfig":"26"},{"size":179,"mtime":1607613678023,"results":"29","hashOfConfig":"26"},{"size":536,"mtime":1608305058616,"results":"30","hashOfConfig":"26"},{"size":1663,"mtime":1610711787899,"results":"31","hashOfConfig":"26"},{"size":1026,"mtime":1610547950199,"results":"32","hashOfConfig":"26"},{"size":94,"mtime":1607596669020,"results":"33","hashOfConfig":"26"},{"size":4547,"mtime":1610638123690,"results":"34","hashOfConfig":"26"},{"size":2469,"mtime":1610637164017,"results":"35","hashOfConfig":"26"},{"size":1063,"mtime":1609998996910,"results":"36","hashOfConfig":"26"},{"size":791,"mtime":1610632974264,"results":"37","hashOfConfig":"26"},{"size":2976,"mtime":1610548458025,"results":"38","hashOfConfig":"26"},{"size":107,"mtime":1608038712347,"results":"39","hashOfConfig":"26"},{"size":1965,"mtime":1610637819422,"results":"40","hashOfConfig":"26"},{"size":820,"mtime":1610550032310,"results":"41","hashOfConfig":"26"},{"size":339,"mtime":1608305246895,"results":"42","hashOfConfig":"26"},{"size":1796,"mtime":1607950590513,"results":"43","hashOfConfig":"26"},{"size":522,"mtime":1608546832682,"results":"44","hashOfConfig":"26"},{"size":398,"mtime":1607596669028,"results":"45","hashOfConfig":"26"},{"size":240,"mtime":1608127336421,"results":"46","hashOfConfig":"26"},{"size":45,"mtime":1607596669030,"results":"47","hashOfConfig":"26"},{"size":828,"mtime":1610550049063,"results":"48","hashOfConfig":"26"},{"size":1226,"mtime":1610724150392,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"8kj7gx",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"52"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"52"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"52"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"52"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"100"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"52"},"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\index.js",[],["107","108"],"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\reportWebVitals.js",[],"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\App.js",[],"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\store\\reducers\\index.js",[],"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\store\\reducers\\polls.js",[],"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\layout\\AdminLayout.js",[],"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\public\\layout\\PublicLayout.js",["109"],"import { Container, Navbar } from \"react-bootstrap\";\r\nimport { Route, Switch, useRouteMatch } from \"react-router-dom\";\r\nimport { PollVote } from \"../components/views/PollVote\";\r\nimport { Vote } from '../components/views/Vote'\r\nimport { RestaurantsList } from '../../admin/components/PollPreview/RestaurantsList'\r\nimport { Results } from \"../components/views/VoteResults\"\r\n\r\nexport function PublicLayout(props) {\r\n\r\n    const { path } = useRouteMatch();\r\n\r\n    return (\r\n        <div>\r\n            <Navbar bg=\"light\" variant=\"light\">\r\n                <Navbar.Brand href=\"#home\">UserHungry</Navbar.Brand>\r\n            </Navbar>\r\n            <Container>\r\n                <Switch>\r\n                    <Route path={`${path}polls/:pollId/result`} component={Results}></Route>\r\n                    <Route path={`${path}polls/:pollId/vote`} component={Vote}></Route>\r\n                    <Route path={`${path}polls/:pollId`} component={PollVote}></Route>\r\n                </Switch>\r\n            </Container>\r\n        </div>\r\n    )\r\n}","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\views\\AdminDashboard.js",[],"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\views\\Poll\\PollCreate.js",[],"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\views\\Poll\\PollPreview.js",["110"],"import { useEffect, useState } from 'react';\r\nimport { Card } from 'react-bootstrap'\r\nimport { useParams } from 'react-router-dom';\r\nimport { getPoll } from '../../../../api/polls';\r\nimport { PlaceOrder } from '../../PollPreview/PlaceAnOrder';\r\nimport { RestaurantsList } from '../../PollPreview/RestaurantsList';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport { IoIosCopy } from \"react-icons/io\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport '../../../../styles/pollPreview.css';\r\n\r\nexport function PollPreview(props) {\r\n\r\n    let { pollId } = useParams();\r\n\r\n    const [poll, setPoll] = useState(null);\r\n\r\n    useEffect(() => {\r\n\r\n        getPoll(pollId).then((response) => {\r\n            setPoll(response.data);\r\n        });\r\n\r\n    }, []);\r\n\r\n    const notify = () => toast('Link is copied to the clipboard!', {type:'dark'})\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                poll ? (\r\n                    <div>\r\n                        <Card className=\"bg-dark text-white\">\r\n                            <Card.Header className='text-center' as=\"h5\">{poll.label}</Card.Header>\r\n                            <Card.Body>\r\n                                <Card.Title style={{ marginBottom: '40px' }}>Status: {poll.active === true ? 'active' : 'no longer active'}</Card.Title>\r\n                                <h6 className='mb-3'>Send link below to your friends, and give them chance to vote for your next dinner</h6>\r\n                                <Card.Text\r\n                                    style={{ marginBottom: '40px' }}>\r\n                                    {`http://localhost:3000/polls/${poll.id}`}\r\n                                    <CopyToClipboard text={`http://localhost:3000/polls/${poll.id}`}><IoIosCopy onClick={notify} className='copyButton' size='1.5em' type='button'></IoIosCopy></CopyToClipboard>\r\n                                    <ToastContainer/>\r\n                                </Card.Text>\r\n\r\n\r\n\r\n                                <PlaceOrder poll={poll}></PlaceOrder>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <RestaurantsList restaurants={poll.restaurants} votes={poll.votes}></RestaurantsList>\r\n\r\n                    </div>\r\n                ) : ''\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst appRoot = document.createElement('div');\r\ndocument.body.appendChild(appRoot);","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\views\\Poll\\PollsList.js",["111"],"import { Col, Row, Button } from \"react-bootstrap\";\r\nimport { Link } from 'react-router-dom';\r\nimport { PollsListTable } from \"../../PollsList/PollsListTable\";\r\nimport { useEffect } from \"react\";\r\nimport { getPolls } from \"../../../../api/polls\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { setPolls } from '../../../../store/actions/pollsAction';\r\n\r\n\r\n\r\nexport function PollsList(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        getPolls().then(({ data }) => dispatch(setPolls(data)));\r\n    }, []);\r\n\r\n    return (\r\n        <Row>\r\n            <Col>\r\n                <Row className='mb-5'>\r\n                    <Col>\r\n                        <h2 className='text-center'>Polls</h2>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Link to='polls/create'><Button onClick={()=>console.log('MIR BOŽIJI HRISTOS SE RODI')} className='mb-3' variant='dark' style={{width: '100%'}}>Create New</Button></Link>\r\n                <PollsListTable></PollsListTable>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\public\\components\\views\\PollVote.js",[],"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\public\\components\\views\\Vote.js",["112","113"],"import { useEffect, useState } from 'react';\r\nimport { getPoll } from '../../../api/polls';\r\nimport { Card, Button } from 'react-bootstrap';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { postVote } from '../../../api/polls';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getRestaurants } from '../../../api/restaurants'\r\n\r\nexport function Vote() {\r\n\r\n    const [poll, setPoll] = useState(null);\r\n    const [selectedId, setSelectedId] = useState(null);\r\n    const [isSending, setIsSending] = useState(false);\r\n\r\n    const history = useHistory();\r\n\r\n    const { pollId } = useParams();\r\n\r\n    useEffect(() => {\r\n        getPoll(pollId).then((res) => {\r\n            setPoll(res.data);\r\n        })\r\n    }, [])\r\n\r\n    const vote = () => {\r\n        if (!isSending) {\r\n            if (selectedId) {\r\n                setIsSending(true)\r\n\r\n                postVote(pollId, selectedId)\r\n                    .then(r => {\r\n                        setIsSending(false)\r\n                        console.log('you voted successfully')\r\n                        history.push(`./result`)\r\n                    })\r\n                    .catch((err) => {\r\n                        setIsSending(false);\r\n                        console.error('error while voting')\r\n                    })\r\n            } else {\r\n                alert('Restaurant not selected')\r\n                console.log('not selected')\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        poll ? (\r\n            <div>\r\n                <Card className=\"bg-dark text-white\">\r\n                    <Card.Header className='text-center' as=\"h5\"></Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Title style={{ marginBottom: '40px' }}>Status: {poll.active === true ? 'Active' : 'No longer active'}</Card.Title>\r\n                        <Card.Text style={{ marginBottom: '40px' }}>\r\n                            {poll.label}\r\n                        </Card.Text>\r\n                        <ul>\r\n                            {\r\n                                poll.restaurants.map((r, i) => {\r\n                                    return (\r\n                                        <li\r\n                                            onClick={() => setSelectedId(r.id)}\r\n                                            key={i}\r\n                                            style={{ cursor: 'pointer' }}\r\n                                            className={`p-4 text-dark my-3 rounded ${selectedId === r.id ? 'bg-info' : 'bg-light'}`}>\r\n                                            {r.name}\r\n                                        </li>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </ul>\r\n                        <Button onClick={() => vote()} className='w-100 mt-4' variant='success'>Vote</Button>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n\r\n        ) : ''\r\n\r\n    )\r\n}","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\api\\restaurants.js",[],"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\PollPreview\\PlaceAnOrder.js",["114"],"import { Accordion, Form, Card, Button } from 'react-bootstrap'\r\nimport { IoIosCheckmark } from \"react-icons/io\";\r\nimport { postOrder } from '../../../api/orders'\r\nimport { useForm } from \"react-hook-form\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\nexport function PlaceOrder(props) {\r\n\r\n    const { register, handleSubmit, reset } = useForm();\r\n    const onSubmit = data => {\r\n\r\n        postOrder(winner.id, data.name).then(r => console.log(r.data));\r\n        notify()\r\n\r\n        reset()\r\n    };\r\n\r\n    const notify = () => toast('Order created successfully!', {type:'dark'})\r\n\r\n    // const [ name , setName] = useState('')\r\n\r\n    const winnerRestaurant = () => {\r\n        const votes = props.poll.votes.map(v => v.restaurantId)\r\n\r\n        let list = [];\r\n        votes.forEach(id => {\r\n            const filtered = votes.filter(v => v === id)\r\n            list = filtered.length > list.length ? filtered : list\r\n        })\r\n\r\n        const winner = props.poll.restaurants.find(r => r.id === list[0]);\r\n\r\n        return winner ? winner : props.poll.restaurants[0];\r\n    }\r\n\r\n    const winner = winnerRestaurant();\r\n\r\n    return (\r\n        winner ? (\r\n            <Card className=\"bg-light text-dark p-4\">\r\n                <Form onSubmit={handleSubmit(onSubmit)}>\r\n                    <Form.Group className='mt-4 text-center'>\r\n                        <Form.Label ref={register} value={winner.name} name='restaurant'>Chosen Restaurant is <strong>{winner.name}</strong></Form.Label>\r\n                        <Form.Control ref={register} name=\"name\" type=\"string\" placeholder=\"Order Label Name\" />\r\n                    </Form.Group>\r\n\r\n                    <Button type=\"submit\" variant=\"secondary\" style={{ width: '100%' }}><IoIosCheckmark size='2em' /></Button>\r\n                    <ToastContainer/>\r\n                </Form>\r\n            </Card>\r\n        ) : <p>There is no winner.</p>\r\n    )\r\n}","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\PollPreview\\RestaurantsList.js",[],"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\store\\actions\\pollsAction.js",[],"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\PollsList\\PollsListTable.js",[],"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\api\\polls.js",[],"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\api\\api.js",[],"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\api\\orders.js",[],"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\constants\\index.js",[],["115","116"],"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\public\\components\\views\\VoteResults.js",["117"],"import { RestaurantsList } from '../../../admin/components/PollPreview/RestaurantsList'\r\nimport { getPoll } from '../../../api/polls'\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\n\r\n\r\nexport function Results() {\r\n\r\n    const { pollId } = useParams()\r\n\r\n    const [restaurants, setRestaurants] = useState([])\r\n    const [votes, setVotes] = useState([])\r\n\r\n    useEffect(() => {\r\n        getPoll(pollId).then((r) => {\r\n            setRestaurants(r.data.restaurants);\r\n            setVotes(r.data.votes)\r\n        })\r\n    }, [])\r\n\r\n    console.log(restaurants)\r\n\r\n    return (\r\n        <div>\r\n            <h2 className='text-center'>You can see current results below</h2>\r\n            <RestaurantsList votes={votes} restaurants={restaurants}></RestaurantsList>\r\n        </div>\r\n    )\r\n\r\n}","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\views\\Restaurants\\Restaurants.js",["118"],"import { useEffect, useState } from \"react\";\r\nimport { Table } from \"react-bootstrap\";\r\nimport { getRestaurants } from \"../../../../api/restaurants\";\r\nimport '../../../../styles/restaurants.css'\r\n\r\nexport function Restaurants() {\r\n\r\n    const [restaurants, setRestaurants] = useState({});\r\n\r\n   \r\n    useEffect(() => {\r\n        getRestaurants().then(r => {\r\n            setRestaurants(r.data)\r\n            console.log(restaurants)\r\n        })\r\n    }, [])\r\n\r\n    const list = Object.values(restaurants);\r\n    return (\r\n        <div>\r\n            <h1 className=\"text-center\">Restaurants</h1>\r\n            <Table className='bg-info mt-3'>\r\n                <thead className='thead'>\r\n                    <tr>\r\n                        <th>NAME</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        list.map( (r,i) => {\r\n                            return (\r\n                                <tr key={i}>\r\n                                    <th>{r.name}</th>\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    )\r\n}",{"ruleId":"119","replacedBy":"120"},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","severity":1,"message":"124","line":5,"column":10,"nodeType":"125","messageId":"126","endLine":5,"endColumn":25},{"ruleId":"127","severity":1,"message":"128","line":25,"column":8,"nodeType":"129","endLine":25,"endColumn":10,"suggestions":"130"},{"ruleId":"127","severity":1,"message":"131","line":17,"column":8,"nodeType":"129","endLine":17,"endColumn":10,"suggestions":"132"},{"ruleId":"123","severity":1,"message":"133","line":7,"column":10,"nodeType":"125","messageId":"126","endLine":7,"endColumn":24},{"ruleId":"127","severity":1,"message":"128","line":23,"column":8,"nodeType":"129","endLine":23,"endColumn":10,"suggestions":"134"},{"ruleId":"123","severity":1,"message":"135","line":1,"column":10,"nodeType":"125","messageId":"126","endLine":1,"endColumn":19},{"ruleId":"119","replacedBy":"136"},{"ruleId":"121","replacedBy":"137"},{"ruleId":"127","severity":1,"message":"128","line":19,"column":8,"nodeType":"129","endLine":19,"endColumn":10,"suggestions":"138"},{"ruleId":"127","severity":1,"message":"139","line":16,"column":8,"nodeType":"129","endLine":16,"endColumn":10,"suggestions":"140"},"no-native-reassign",["141"],"no-negated-in-lhs",["142"],"no-unused-vars","'RestaurantsList' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'pollId'. Either include it or remove the dependency array.","ArrayExpression",["143"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["144"],"'getRestaurants' is defined but never used.",["145"],"'Accordion' is defined but never used.",["141"],["142"],["146"],"React Hook useEffect has a missing dependency: 'restaurants'. Either include it or remove the dependency array.",["147"],"no-global-assign","no-unsafe-negation",{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"148","fix":"152"},{"desc":"148","fix":"153"},{"desc":"154","fix":"155"},"Update the dependencies array to be: [pollId]",{"range":"156","text":"157"},"Update the dependencies array to be: [dispatch]",{"range":"158","text":"159"},{"range":"160","text":"157"},{"range":"161","text":"157"},"Update the dependencies array to be: [restaurants]",{"range":"162","text":"163"},[828,830],"[pollId]",[538,540],"[dispatch]",[725,727],[565,567],[451,453],"[restaurants]"]