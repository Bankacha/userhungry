[{"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\index.js":"1","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\reportWebVitals.js":"2","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\App.js":"3","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\store\\reducers\\index.js":"4","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\store\\reducers\\polls.js":"5","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\layout\\AdminLayout.js":"6","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\public\\layout\\PublicLayout.js":"7","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\views\\AdminDashboard.js":"8","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\views\\Poll\\PollCreate.js":"9","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\views\\Poll\\PollPreview.js":"10","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\views\\Poll\\PollsList.js":"11","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\public\\components\\views\\PollVote.js":"12","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\public\\components\\views\\Vote.js":"13","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\api\\restaurants.js":"14","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\PollPreview\\PlaceAnOrder.js":"15","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\PollPreview\\RestaurantsList.js":"16","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\store\\actions\\pollsAction.js":"17","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\PollsList\\PollsListTable.js":"18","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\api\\polls.js":"19","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\api\\api.js":"20","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\api\\orders.js":"21","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\constants\\index.js":"22","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\public\\components\\views\\VoteResults.js":"23"},{"size":816,"mtime":1607613472415,"results":"24","hashOfConfig":"25"},{"size":375,"mtime":1607596669086,"results":"26","hashOfConfig":"25"},{"size":525,"mtime":1607614822235,"results":"27","hashOfConfig":"25"},{"size":179,"mtime":1607613678023,"results":"28","hashOfConfig":"25"},{"size":536,"mtime":1608305058616,"results":"29","hashOfConfig":"25"},{"size":1381,"mtime":1607700190536,"results":"30","hashOfConfig":"25"},{"size":1026,"mtime":1610547950199,"results":"31","hashOfConfig":"25"},{"size":94,"mtime":1607596669020,"results":"32","hashOfConfig":"25"},{"size":4547,"mtime":1609999001771,"results":"33","hashOfConfig":"25"},{"size":2208,"mtime":1610635874354,"results":"34","hashOfConfig":"25"},{"size":1063,"mtime":1609998996910,"results":"35","hashOfConfig":"25"},{"size":791,"mtime":1610632974264,"results":"36","hashOfConfig":"25"},{"size":2976,"mtime":1610548458025,"results":"37","hashOfConfig":"25"},{"size":107,"mtime":1608038712347,"results":"38","hashOfConfig":"25"},{"size":1805,"mtime":1608201520517,"results":"39","hashOfConfig":"25"},{"size":820,"mtime":1610550032310,"results":"40","hashOfConfig":"25"},{"size":339,"mtime":1608305246895,"results":"41","hashOfConfig":"25"},{"size":1796,"mtime":1607950590513,"results":"42","hashOfConfig":"25"},{"size":522,"mtime":1608546832682,"results":"43","hashOfConfig":"25"},{"size":398,"mtime":1607596669028,"results":"44","hashOfConfig":"25"},{"size":240,"mtime":1608127336421,"results":"45","hashOfConfig":"25"},{"size":45,"mtime":1607596669030,"results":"46","hashOfConfig":"25"},{"size":828,"mtime":1610550049063,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"8kj7gx",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"50"},"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\index.js",[],["100","101"],"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\reportWebVitals.js",[],"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\App.js",[],"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\store\\reducers\\index.js",[],"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\store\\reducers\\polls.js",[],"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\layout\\AdminLayout.js",[],"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\public\\layout\\PublicLayout.js",["102"],"import { Container, Navbar } from \"react-bootstrap\";\r\nimport { Route, Switch, useRouteMatch } from \"react-router-dom\";\r\nimport { PollVote } from \"../components/views/PollVote\";\r\nimport { Vote } from '../components/views/Vote'\r\nimport { RestaurantsList } from '../../admin/components/PollPreview/RestaurantsList'\r\nimport { Results } from \"../components/views/VoteResults\"\r\n\r\nexport function PublicLayout(props) {\r\n\r\n    const { path } = useRouteMatch();\r\n\r\n    return (\r\n        <div>\r\n            <Navbar bg=\"light\" variant=\"light\">\r\n                <Navbar.Brand href=\"#home\">UserHungry</Navbar.Brand>\r\n            </Navbar>\r\n            <Container>\r\n                <Switch>\r\n                    <Route path={`${path}polls/:pollId/result`} component={Results}></Route>\r\n                    <Route path={`${path}polls/:pollId/vote`} component={Vote}></Route>\r\n                    <Route path={`${path}polls/:pollId`} component={PollVote}></Route>\r\n                </Switch>\r\n            </Container>\r\n        </div>\r\n    )\r\n}","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\views\\AdminDashboard.js",[],"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\views\\Poll\\PollCreate.js",[],"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\views\\Poll\\PollPreview.js",["103"],"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\views\\Poll\\PollsList.js",["104"],"import { Col, Row, Button } from \"react-bootstrap\";\r\nimport { Link } from 'react-router-dom';\r\nimport { PollsListTable } from \"../../PollsList/PollsListTable\";\r\nimport { useEffect } from \"react\";\r\nimport { getPolls } from \"../../../../api/polls\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { setPolls } from '../../../../store/actions/pollsAction';\r\n\r\n\r\n\r\nexport function PollsList(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        getPolls().then(({ data }) => dispatch(setPolls(data)));\r\n    }, []);\r\n\r\n    return (\r\n        <Row>\r\n            <Col>\r\n                <Row className='mb-5'>\r\n                    <Col>\r\n                        <h2 className='text-center'>Polls</h2>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Link to='polls/create'><Button onClick={()=>console.log('MIR BOŽIJI HRISTOS SE RODI')} className='mb-3' variant='dark' style={{width: '100%'}}>Create New</Button></Link>\r\n                <PollsListTable></PollsListTable>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\public\\components\\views\\PollVote.js",[],"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\public\\components\\views\\Vote.js",["105","106"],"import { useEffect, useState } from 'react';\r\nimport { getPoll } from '../../../api/polls';\r\nimport { Card, Button } from 'react-bootstrap';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { postVote } from '../../../api/polls';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { getRestaurants } from '../../../api/restaurants'\r\n\r\nexport function Vote() {\r\n\r\n    const [poll, setPoll] = useState(null);\r\n    const [selectedId, setSelectedId] = useState(null);\r\n    const [isSending, setIsSending] = useState(false);\r\n\r\n    const history = useHistory();\r\n\r\n    const { pollId } = useParams();\r\n\r\n    useEffect(() => {\r\n        getPoll(pollId).then((res) => {\r\n            setPoll(res.data);\r\n        })\r\n    }, [])\r\n\r\n    const vote = () => {\r\n        if (!isSending) {\r\n            if (selectedId) {\r\n                setIsSending(true)\r\n\r\n                postVote(pollId, selectedId)\r\n                    .then(r => {\r\n                        setIsSending(false)\r\n                        console.log('you voted successfully')\r\n                        history.push(`./result`)\r\n                    })\r\n                    .catch((err) => {\r\n                        setIsSending(false);\r\n                        console.error('error while voting')\r\n                    })\r\n            } else {\r\n                alert('Restaurant not selected')\r\n                console.log('not selected')\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        poll ? (\r\n            <div>\r\n                <Card className=\"bg-dark text-white\">\r\n                    <Card.Header className='text-center' as=\"h5\"></Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Title style={{ marginBottom: '40px' }}>Status: {poll.active === true ? 'Active' : 'No longer active'}</Card.Title>\r\n                        <Card.Text style={{ marginBottom: '40px' }}>\r\n                            {poll.label}\r\n                        </Card.Text>\r\n                        <ul>\r\n                            {\r\n                                poll.restaurants.map((r, i) => {\r\n                                    return (\r\n                                        <li\r\n                                            onClick={() => setSelectedId(r.id)}\r\n                                            key={i}\r\n                                            style={{ cursor: 'pointer' }}\r\n                                            className={`p-4 text-dark my-3 rounded ${selectedId === r.id ? 'bg-info' : 'bg-light'}`}>\r\n                                            {r.name}\r\n                                        </li>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </ul>\r\n                        <Button onClick={() => vote()} className='w-100 mt-4' variant='success'>Vote</Button>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n\r\n        ) : ''\r\n\r\n    )\r\n}","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\api\\restaurants.js",[],"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\PollPreview\\PlaceAnOrder.js",["107","108"],"import { Accordion, Form, Card, Button } from 'react-bootstrap'\r\nimport { IoIosCheckmark } from \"react-icons/io\";\r\nimport { postOrder } from '../../../api/orders'\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useState } from 'react';\r\n\r\n\r\n\r\nexport function PlaceOrder(props) {\r\n\r\n    const { register, handleSubmit, reset } = useForm();\r\n    const onSubmit = data => {\r\n\r\n        postOrder(winner.id, data.name).then(r => console.log(r.data));\r\n        alert('Order created successfully!')\r\n\r\n        reset()\r\n    };\r\n\r\n    // const [ name , setName] = useState('')\r\n\r\n    const winnerRestaurant = () => {\r\n        const votes = props.poll.votes.map(v => v.restaurantId)\r\n\r\n        let list = [];\r\n        votes.forEach(id => {\r\n            const filtered = votes.filter(v => v === id)\r\n            list = filtered.length > list.length ? filtered : list\r\n        })\r\n\r\n        const winner = props.poll.restaurants.find(r => r.id === list[0]);\r\n\r\n        return winner ? winner : props.poll.restaurants[0];\r\n    }\r\n\r\n    const winner = winnerRestaurant();\r\n\r\n    return (\r\n        winner ? (\r\n            <Card className=\"bg-light text-dark p-4\">\r\n                <Form onSubmit={handleSubmit(onSubmit)}>\r\n                    <Form.Group className='mt-4 text-center'>\r\n                        <Form.Label ref={register} value={winner.name} name='restaurant'>Chosen Restaurant is <strong>{winner.name}</strong></Form.Label>\r\n                        <Form.Control ref={register} name=\"name\" type=\"string\" placeholder=\"Order Label Name\" />\r\n                    </Form.Group>\r\n\r\n                    <Button type=\"submit\" variant=\"secondary\" style={{ width: '100%' }}><IoIosCheckmark size='2em' /></Button>\r\n                </Form>\r\n            </Card>\r\n        ) : <p>There is no winner.</p>\r\n    )\r\n}","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\PollPreview\\RestaurantsList.js",[],"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\store\\actions\\pollsAction.js",[],"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\PollsList\\PollsListTable.js",[],"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\api\\polls.js",[],"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\api\\api.js",[],"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\api\\orders.js",[],"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\constants\\index.js",[],"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\public\\components\\views\\VoteResults.js",["109"],"import { RestaurantsList } from '../../../admin/components/PollPreview/RestaurantsList'\r\nimport { getPoll } from '../../../api/polls'\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\n\r\n\r\nexport function Results() {\r\n\r\n    const { pollId } = useParams()\r\n\r\n    const [restaurants, setRestaurants] = useState([])\r\n    const [votes, setVotes] = useState([])\r\n\r\n    useEffect(() => {\r\n        getPoll(pollId).then((r) => {\r\n            setRestaurants(r.data.restaurants);\r\n            setVotes(r.data.votes)\r\n        })\r\n    }, [])\r\n\r\n    console.log(restaurants)\r\n\r\n    return (\r\n        <div>\r\n            <h2 className='text-center'>You can see current results below</h2>\r\n            <RestaurantsList votes={votes} restaurants={restaurants}></RestaurantsList>\r\n        </div>\r\n    )\r\n\r\n}",{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":5,"column":10,"nodeType":"116","messageId":"117","endLine":5,"endColumn":25},{"ruleId":"118","severity":1,"message":"119","line":23,"column":8,"nodeType":"120","endLine":23,"endColumn":10,"suggestions":"121"},{"ruleId":"118","severity":1,"message":"122","line":17,"column":8,"nodeType":"120","endLine":17,"endColumn":10,"suggestions":"123"},{"ruleId":"114","severity":1,"message":"124","line":7,"column":10,"nodeType":"116","messageId":"117","endLine":7,"endColumn":24},{"ruleId":"118","severity":1,"message":"119","line":23,"column":8,"nodeType":"120","endLine":23,"endColumn":10,"suggestions":"125"},{"ruleId":"114","severity":1,"message":"126","line":1,"column":10,"nodeType":"116","messageId":"117","endLine":1,"endColumn":19},{"ruleId":"114","severity":1,"message":"127","line":5,"column":10,"nodeType":"116","messageId":"117","endLine":5,"endColumn":18},{"ruleId":"118","severity":1,"message":"119","line":19,"column":8,"nodeType":"120","endLine":19,"endColumn":10,"suggestions":"128"},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],"no-unused-vars","'RestaurantsList' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'pollId'. Either include it or remove the dependency array.","ArrayExpression",["131"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["132"],"'getRestaurants' is defined but never used.",["133"],"'Accordion' is defined but never used.","'useState' is defined but never used.",["134"],"no-global-assign","no-unsafe-negation",{"desc":"135","fix":"136"},{"desc":"137","fix":"138"},{"desc":"135","fix":"139"},{"desc":"135","fix":"140"},"Update the dependencies array to be: [pollId]",{"range":"141","text":"142"},"Update the dependencies array to be: [dispatch]",{"range":"143","text":"144"},{"range":"145","text":"142"},{"range":"146","text":"142"},[722,724],"[pollId]",[538,540],"[dispatch]",[725,727],[565,567]]