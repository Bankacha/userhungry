[{"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\index.js":"1","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\App.js":"2","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\reportWebVitals.js":"3","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\store\\reducers\\index.js":"4","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\public\\layout\\PublicLayout.js":"5","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\layout\\AdminLayout.js":"6","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\store\\reducers\\polls.js":"7","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\public\\components\\views\\Vote.js":"8","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\public\\components\\views\\PollVote.js":"9","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\public\\components\\views\\VoteResults.js":"10","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\views\\AdminDashboard.js":"11","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\views\\Poll\\PollCreate.js":"12","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\views\\Poll\\PollPreview.js":"13","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\views\\Poll\\PollsList.js":"14","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\views\\Restaurants\\Restaurant.js":"15","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\views\\Restaurants\\Restaurants.js":"16","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\api\\restaurants.js":"17","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\api\\polls.js":"18","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\PollPreview\\RestaurantsList.js":"19","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\PollPreview\\PlaceAnOrder.js":"20","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\PollsList\\PollsListTable.js":"21","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\store\\actions\\pollsAction.js":"22","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\Restaurants\\EditRestaurant.js":"23","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\Restaurants\\Meals.js":"24","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\Restaurants\\CreateMeal.js":"25","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\api\\meals.js":"26","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\api\\api.js":"27","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\api\\orders.js":"28","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\constants\\index.js":"29","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\views\\footer.js":"30","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\views\\Orders\\Orders.js":"31","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\public\\components\\views\\orders\\OrderCreate.js":"32","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\public\\components\\orders\\Cart.js":"33"},{"size":816,"mtime":1607613472415,"results":"34","hashOfConfig":"35"},{"size":525,"mtime":1607614822235,"results":"36","hashOfConfig":"35"},{"size":375,"mtime":1607596669086,"results":"37","hashOfConfig":"35"},{"size":179,"mtime":1607613678023,"results":"38","hashOfConfig":"35"},{"size":1209,"mtime":1611590071156,"results":"39","hashOfConfig":"35"},{"size":2318,"mtime":1611575981336,"results":"40","hashOfConfig":"35"},{"size":536,"mtime":1608305058616,"results":"41","hashOfConfig":"35"},{"size":2917,"mtime":1611222295290,"results":"42","hashOfConfig":"35"},{"size":791,"mtime":1611222295287,"results":"43","hashOfConfig":"35"},{"size":828,"mtime":1611222295291,"results":"44","hashOfConfig":"35"},{"size":94,"mtime":1607596669020,"results":"45","hashOfConfig":"35"},{"size":4765,"mtime":1611327574515,"results":"46","hashOfConfig":"35"},{"size":2490,"mtime":1611589407987,"results":"47","hashOfConfig":"35"},{"size":1006,"mtime":1611658864322,"results":"48","hashOfConfig":"35"},{"size":1853,"mtime":1611327912619,"results":"49","hashOfConfig":"35"},{"size":2412,"mtime":1611572950272,"results":"50","hashOfConfig":"35"},{"size":307,"mtime":1611222295261,"results":"51","hashOfConfig":"35"},{"size":522,"mtime":1608546832682,"results":"52","hashOfConfig":"35"},{"size":821,"mtime":1611489528394,"results":"53","hashOfConfig":"35"},{"size":2124,"mtime":1611324362681,"results":"54","hashOfConfig":"35"},{"size":1896,"mtime":1611323481941,"results":"55","hashOfConfig":"35"},{"size":339,"mtime":1608305246895,"results":"56","hashOfConfig":"35"},{"size":2562,"mtime":1611572807277,"results":"57","hashOfConfig":"35"},{"size":1902,"mtime":1611326149647,"results":"58","hashOfConfig":"35"},{"size":2479,"mtime":1611571937442,"results":"59","hashOfConfig":"35"},{"size":374,"mtime":1611325192262,"results":"60","hashOfConfig":"35"},{"size":398,"mtime":1607596669028,"results":"61","hashOfConfig":"35"},{"size":242,"mtime":1611589266661,"results":"62","hashOfConfig":"35"},{"size":45,"mtime":1607596669030,"results":"63","hashOfConfig":"35"},{"size":894,"mtime":1611568559171,"results":"64","hashOfConfig":"35"},{"size":381,"mtime":1611741842176,"results":"65","hashOfConfig":"35"},{"size":3699,"mtime":1611741228046,"results":"66","hashOfConfig":"35"},{"size":1801,"mtime":1611679171593,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"8kj7gx",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"70"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"70"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"70"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"70"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"70"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"70"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"70"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"70"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"143","messages":"144","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"145","messages":"146","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"70"},"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\index.js",[],["148","149"],"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\App.js",[],"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\reportWebVitals.js",[],"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\store\\reducers\\index.js",[],"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\public\\layout\\PublicLayout.js",[],"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\layout\\AdminLayout.js",[],"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\store\\reducers\\polls.js",[],"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\public\\components\\views\\Vote.js",["150"],"import { useEffect, useState } from 'react';\r\nimport { getPoll } from '../../../api/polls';\r\nimport { Card, Button } from 'react-bootstrap';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { postVote } from '../../../api/polls';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport function Vote() {\r\n\r\n    const [poll, setPoll] = useState(null);\r\n    const [selectedId, setSelectedId] = useState(null);\r\n    const [isSending, setIsSending] = useState(false);\r\n\r\n    const history = useHistory();\r\n\r\n    const { pollId } = useParams();\r\n\r\n    useEffect(() => {\r\n        getPoll(pollId).then((res) => {\r\n            setPoll(res.data);\r\n        })\r\n    }, [])\r\n\r\n    const vote = () => {\r\n        if (!isSending) {\r\n            if (selectedId) {\r\n                setIsSending(true)\r\n\r\n                postVote(pollId, selectedId)\r\n                    .then(r => {\r\n                        setIsSending(false)\r\n                        console.log('you voted successfully')\r\n                        history.push(`./result`)\r\n                    })\r\n                    .catch((err) => {\r\n                        setIsSending(false);\r\n                        console.error('error while voting')\r\n                    })\r\n            } else {\r\n                alert('Restaurant not selected')\r\n                console.log('not selected')\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    return (\r\n        poll ? (\r\n            <div>\r\n                <Card className=\"bg-dark text-white\">\r\n                    <Card.Header className='text-center' as=\"h5\"></Card.Header>\r\n                    <Card.Body>\r\n                        <Card.Title style={{ marginBottom: '40px' }}>Status: {poll.active === true ? 'Active' : 'No longer active'}</Card.Title>\r\n                        <Card.Text style={{ marginBottom: '40px' }}>\r\n                            {poll.label}\r\n                        </Card.Text>\r\n                        <ul>\r\n                            {\r\n                                poll.restaurants.map((r, i) => {\r\n                                    return (\r\n                                        <li\r\n                                            onClick={() => setSelectedId(r.id)}\r\n                                            key={i}\r\n                                            style={{ cursor: 'pointer' }}\r\n                                            className={`p-4 text-dark my-3 rounded ${selectedId === r.id ? 'bg-info' : 'bg-light'}`}>\r\n                                            {r.name}\r\n                                        </li>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </ul>\r\n                        <Button onClick={() => vote()} className='w-100 mt-4' variant='success'>Vote</Button>\r\n                    </Card.Body>\r\n                </Card>\r\n            </div>\r\n\r\n        ) : ''\r\n\r\n    )\r\n}","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\public\\components\\views\\PollVote.js",[],"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\public\\components\\views\\VoteResults.js",["151"],"import { RestaurantsList } from '../../../admin/components/PollPreview/RestaurantsList'\r\nimport { getPoll } from '../../../api/polls'\r\nimport { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router';\r\n\r\n\r\nexport function Results() {\r\n\r\n    const { pollId } = useParams()\r\n\r\n    const [restaurants, setRestaurants] = useState([])\r\n    const [votes, setVotes] = useState([])\r\n\r\n    useEffect(() => {\r\n        getPoll(pollId).then((r) => {\r\n            setRestaurants(r.data.restaurants);\r\n            setVotes(r.data.votes)\r\n        })\r\n    }, [])\r\n\r\n    console.log(restaurants)\r\n\r\n    return (\r\n        <div>\r\n            <h2 className='text-center'>You can see current results below</h2>\r\n            <RestaurantsList votes={votes} restaurants={restaurants}></RestaurantsList>\r\n        </div>\r\n    )\r\n\r\n}","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\views\\AdminDashboard.js",[],"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\views\\Poll\\PollCreate.js",["152"],"import { useEffect, useState } from 'react';\r\nimport { Form, Row, Col } from 'react-bootstrap';\r\nimport { getRestaurants } from '../../../../api/restaurants'\r\nimport '../../../../styles/pollCreate.css'\r\nimport { createPoll } from '../../../../api/polls'\r\nimport { useHistory } from 'react-router-dom';\r\nimport { IoIosArrowForward } from 'react-icons/io';\r\nimport { IoIosClose, IoIosCreate } from \"react-icons/io\";\r\nimport { GiForkKnifeSpoon } from \"react-icons/gi\";\r\n\r\nexport function PollsCreate(props) {\r\n\r\n    const history = useHistory();\r\n\r\n    const [restaurants, setRestaurants] = useState([]);\r\n    const [selectedRestaurants, setSelectedRestaurants] = useState([]);\r\n    const [label, setLabel] = useState('')\r\n    const [hovered, setHovered] = useState(-1)\r\n\r\n    useEffect(() => {\r\n        getRestaurants().then(r => setRestaurants(r.data));\r\n    }, [])\r\n\r\n    // CREATING SECOND PARAMETER FOR CREATE REQUEST \r\n    const restSelect = (r) => {\r\n        setSelectedRestaurants([...selectedRestaurants, r]);\r\n        setRestaurants([...restaurants.filter(rest => rest.id !== r.id)])\r\n    }\r\n\r\n    // CREATE REQUEST\r\n    const create = () => {\r\n        const IdList = selectedRestaurants.map(r => r.id);\r\n\r\n        if (!label) {\r\n            alert('please enter poll label')\r\n        } else {\r\n            createPoll(label, IdList)\r\n\r\n                .then(r => {\r\n                    history.push(`/admin/polls/${r.data.id}`);\r\n                })\r\n                .catch(function (error) {\r\n                    console.log(error);\r\n                });\r\n        }\r\n\r\n    }\r\n\r\n    // x button function\r\n\r\n    const deleteFromWishlist = (r) => {\r\n        setRestaurants([...restaurants, r]);\r\n        setSelectedRestaurants([...selectedRestaurants.filter(rest => rest.id !== r.id)])\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <Form>\r\n            <Form.Group controlId=\"exampleForm.ControlInput1\">\r\n                <Form.Label>Enter Poll Label</Form.Label>\r\n                <Form.Control onChange={e => setLabel(e.target.value)} type=\"string\" placeholder=\"Poll Name\" />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"exampleForm.ControlSelect1\">\r\n                <Row>\r\n                    <Col className='offset-1 md-3'>\r\n                        <Form.Label className='mt-3 mb-5 pollsCreateText'><strong>Click on restaurant to make a WishList &gt;</strong></Form.Label>\r\n\r\n                    </Col>\r\n                    <Col className=' md-3'>\r\n                        <Form.Label className='mt-3 mb-5 pollsCreateText2'><strong>Wishlist</strong></Form.Label>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Row>\r\n                    <Col className='offset-1 md-3'>\r\n                        {\r\n                            restaurants.map((r, i) => {\r\n                                return (\r\n                                    <Row key={i} onClick={() => restSelect(r)} className=\"justify-content-between shadow-sm bg-light my-4 p-2 rounded\">\r\n                                        <Col md={10} className='mb-1 mt-1' >{r.name}</Col>\r\n                                        <Col md={2} className='p-0 text-right'>\r\n                                            <IoIosArrowForward />\r\n                                        </Col>\r\n                                    </Row>\r\n                                )\r\n                            })\r\n                        }\r\n                    </Col>\r\n                    <Col className='offset-1 md-3'>\r\n                        {\r\n                            selectedRestaurants.map((r, i) => {\r\n                                return (\r\n                                    <Row onMouseLeave={() => setHovered(-1)} onMouseOver={() => setHovered(i)} key={i} className=\"justify-content-between shadow-sm bg-light my-4 p-2 rounded\">\r\n                                        <Col onClick={() => deleteFromWishlist(r)}>\r\n                                            {r.name}\r\n                                            {\r\n                                                hovered === i ? <IoIosClose size='1.5em'></IoIosClose> : ''\r\n                                            }\r\n                                        </Col>\r\n                                    </Row>\r\n                                )\r\n                            })\r\n                        }\r\n                    </Col>\r\n                    <Col className='md-2 createCol'>\r\n                        {\r\n                            selectedRestaurants.length ? <GiForkKnifeSpoon onClick={() => create()} type=\"button\" variant=\"success\" size='8em' className='createBtn' /> : ''\r\n                        }\r\n                    </Col>\r\n                </Row>\r\n\r\n            </Form.Group>\r\n        </Form >\r\n    )\r\n}","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\views\\Poll\\PollPreview.js",["153"],"import { useEffect, useState } from 'react';\r\nimport { Card } from 'react-bootstrap'\r\nimport { useParams } from 'react-router-dom';\r\nimport { getPoll } from '../../../../api/polls';\r\nimport { PlaceOrder } from '../../PollPreview/PlaceAnOrder';\r\nimport { RestaurantsList } from '../../PollPreview/RestaurantsList';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\nimport { IoIosCopy } from \"react-icons/io\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport '../../../../styles/pollPreview.css';\r\n\r\nexport function PollPreview(props) {\r\n\r\n    let { pollId } = useParams();\r\n\r\n    const [poll, setPoll] = useState(null);\r\n\r\n    useEffect(() => {\r\n\r\n        getPoll(pollId).then((response) => {\r\n            setPoll(response.data);\r\n        });\r\n\r\n    }, []);\r\n    \r\n    const notify = () => toast('Link is copied to the clipboard!', {type:'dark'})\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                poll ? (\r\n                    <div className='mb-3'>\r\n                        <Card className=\"bg-dark text-white\">\r\n                            <Card.Header className='text-center' as=\"h5\">{poll.label}</Card.Header>\r\n                            <Card.Body>\r\n                                <Card.Title style={{ marginBottom: '40px' }}>Status: {poll.active === true ? 'active' : 'no longer active'}</Card.Title>\r\n                                <h6 className='mb-3'>Send link below to your friends, and give them chance to vote for your next dinner</h6>\r\n                                <Card.Text\r\n                                    style={{ marginBottom: '40px' }}>\r\n                                    {`http://localhost:3000/polls/${poll.id}`}\r\n                                    <CopyToClipboard text={`http://localhost:3000/polls/${poll.id}`}><IoIosCopy onClick={notify} className='copyButton' size='1.5em' type='button'></IoIosCopy></CopyToClipboard>\r\n                                    <ToastContainer/>\r\n                                </Card.Text>\r\n\r\n\r\n\r\n                                <PlaceOrder poll={poll}></PlaceOrder>\r\n                            </Card.Body>\r\n                        </Card>\r\n                        <RestaurantsList restaurants={poll.restaurants} votes={poll.votes}></RestaurantsList>\r\n\r\n                    </div>\r\n                ) : ''\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst appRoot = document.createElement('div');\r\ndocument.body.appendChild(appRoot);","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\views\\Poll\\PollsList.js",["154"],"import { Col, Row, Button } from \"react-bootstrap\";\r\nimport { Link } from 'react-router-dom';\r\nimport { PollsListTable } from \"../../PollsList/PollsListTable\";\r\nimport { useEffect } from \"react\";\r\nimport { getPolls } from \"../../../../api/polls\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { setPolls } from '../../../../store/actions/pollsAction';\r\n\r\n\r\n\r\nexport function PollsList(props) {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        getPolls().then(({ data }) => dispatch(setPolls(data)));\r\n    }, []);\r\n\r\n    return (\r\n        <Row>\r\n            <Col>\r\n                <Row className='mb-5'>\r\n                    <Col>\r\n                        <h1 className='text-center'>Polls</h1>\r\n                    </Col>\r\n                </Row>\r\n\r\n                <Link to='polls/create'><Button className='mb-3' variant='dark' style={{width: '100%'}}>Create New</Button></Link>\r\n                <PollsListTable></PollsListTable>\r\n            </Col>\r\n        </Row>\r\n    )\r\n}","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\views\\Restaurants\\Restaurant.js",["155"],"import { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router\";\r\nimport { getRestaurant } from \"../../../../api/restaurants\";\r\nimport { EditRestaurant } from \"../../Restaurants/EditRestaurant\";\r\nimport { Meals } from \"../../../components/Restaurants/Meals\";\r\nimport { Button } from \"react-bootstrap\";\r\n\r\nexport function Restaurant() {\r\n    const { restId } = useParams();\r\n\r\n    const [restaurant, setRestaurant] = useState();\r\n    const [error, setError] = useState(false);\r\n    const [showMeals, setShowMeals] = useState(false);\r\n\r\n    const loadRestaurant = () => {\r\n        getRestaurant(restId)\r\n            .then(({ data }) => setRestaurant(data))\r\n            .catch((err) => setError(true))\r\n    }\r\n\r\n    useEffect(() => {\r\n        loadRestaurant();\r\n    }, [])\r\n\r\n    const handleClick = () => {\r\n        if(showMeals === false) {\r\n            setShowMeals(true)\r\n        } else {\r\n            setShowMeals(false)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                restaurant && !error ? (\r\n                    <div>\r\n                        <h3 className=\"mb-5 text-center restaurantName\">Restaurant: <strong>{restaurant.name}</strong></h3>\r\n\r\n                        <EditRestaurant onEdited={() => loadRestaurant()} restaurant={restaurant}></EditRestaurant>\r\n                        <hr />\r\n                        <Button onClick={handleClick} className='w-100 bg-dark mb-3'>MEALS</Button> \r\n                        {\r\n                            showMeals === true ? (\r\n                                <Meals loadRestaurant={loadRestaurant} id={restaurant.id} meals={restaurant.meals}></Meals>\r\n                            ) : ''\r\n                        }\r\n                    </div>\r\n                ) : 'There is no restaurant with this id.'\r\n            }\r\n        </div>\r\n    )\r\n}","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\views\\Restaurants\\Restaurants.js",["156","157","158","159","160"],"import { useEffect, useState } from \"react\";\r\nimport { Button, Row, Col, Table } from \"react-bootstrap\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { getRestaurants } from \"../../../../api/restaurants\";\r\nimport '../../../../styles/restaurants.css'\r\nimport { EditRestaurant } from '../../../components/Restaurants/EditRestaurant'\r\nimport { IoEyeOutline, IoPencil } from \"react-icons/io5\";\r\n\r\nexport function Restaurants() {\r\n\r\n    const [restaurants, setRestaurants] = useState([{'name': 'no', 'id': 'no', 'address': 'no', 'created':'no'}]);\r\n\r\n    const [ clicked, setClicked ] = useState(false);\r\n\r\n    const [ clickedID , setClickedID] = useState(null);\r\n\r\n    const history = useHistory()\r\n\r\n    const handleClick = (id) => {\r\n        history.push(`/admin/restaurants/${id}`)\r\n    }\r\n\r\n    useEffect(() => {\r\n        getRestaurants().then(r => {\r\n            setRestaurants(r.data)\r\n        })\r\n    }, [])\r\n\r\n    const handleEditButton = (id) => {\r\n        if(clicked === false) {\r\n            setClicked(true)\r\n            setClickedID(id)\r\n        } else {\r\n            setClickedID(id)\r\n        }\r\n    }\r\n\r\n    const list = Object.values(restaurants);\r\n\r\n    console.log(restaurants)\r\n\r\n    return (\r\n        <div>\r\n            <h1 className=\"text-center\">Restaurants</h1>\r\n            <Row className='mt-4'>\r\n                <Col>\r\n                    <Table striped bordered hover variant=\"dark\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>NAME</th>\r\n                                <th className='text-center'>SHOW</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {\r\n                                list.map((r, i) => {\r\n                                    return (\r\n                                        <tr key={i}>\r\n                                            <th>{r.name}</th>\r\n                                            <th className='text-center'><IoEyeOutline size='2em' type='button' onClick={() => handleClick(r.id)}></IoEyeOutline></th>\r\n                                        </tr>\r\n                                    )\r\n                                })\r\n                            }\r\n\r\n                        </tbody>\r\n                    </Table>\r\n                </Col>\r\n\r\n            </Row>\r\n        </div>\r\n\r\n    )\r\n}","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\api\\restaurants.js",[],"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\api\\polls.js",[],"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\PollPreview\\RestaurantsList.js",[],"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\PollPreview\\PlaceAnOrder.js",[],"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\PollsList\\PollsListTable.js",["161"],"import { Table, Button } from \"react-bootstrap\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { IoIosEye , IoMdTrash} from \"react-icons/io\";\r\nimport {Link} from 'react-router-dom'\r\n//import { pollDelete } from '../../../api/polls';\r\nimport { deletePoll } from '../../../store/actions/pollsAction';\r\n\r\n\r\nexport function PollsListTable() {\r\n\r\n    const polls = useSelector(p => p.polls.polls)\r\n    const dispatch = useDispatch();\r\n\r\n    // useEffect((id) => {\r\n    //     deletePoll ? \r\n    //     pollDelete(id).then(r => r.data.filter( r.id !== id)) : null\r\n    // }, []);\r\n\r\n\r\n    \r\n\r\n    return (\r\n        <Table striped bordered hover variant=\"dark\">\r\n            <thead>\r\n                <tr>\r\n                    <th></th>\r\n                    <th>Poll name</th>\r\n                    <th>Is active?</th>\r\n                    <th>Created</th>\r\n                    <th style={{width: '30px'}}>View</th>\r\n                    <th className='text-center'>Delete</th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                {\r\n                    polls.map((p, i) => {\r\n                        return (\r\n                            <tr key={i}>\r\n                                <td>{i + 1}</td>\r\n                                <td>{p.label}</td>\r\n                                <td>{p.active === true ? 'active' : 'no longer active'}</td>\r\n                                <td>{p.created.split('T')[0]}</td>\r\n                                <td><Link to={`polls/${p.id}`}><IoIosEye size='1.5em' color=\"grey\" type='button'/></Link></td>\r\n                                <td className='text-center'><IoMdTrash onClick={ ()=> dispatch(deletePoll(p.id))} size='1.5em' color=\"grey\"></IoMdTrash></td>\r\n                            </tr>\r\n                        )\r\n                    })\r\n                }\r\n            </tbody>\r\n        </Table>\r\n    )\r\n}","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\store\\actions\\pollsAction.js",[],"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\Restaurants\\EditRestaurant.js",["162"],"import { useState } from 'react';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport { updateRestaurant } from '../../../api/restaurants'\r\n\r\nexport function EditRestaurant(props) {\r\n\r\n    const [name, setName] = useState(props.restaurant.name)\r\n    const [address, setAddress] = useState(props.restaurant.address)\r\n    const [error, setError] = useState(false)\r\n\r\n    const history = useHistory();\r\n\r\n    const goBack = () => {\r\n        history.push(\"./\");\r\n    }\r\n\r\n    const edit = () => {\r\n        const body = { ...props.restaurant }\r\n\r\n        body.name = name ? name : body.name;\r\n        body.address = address ? address : body.address;\r\n\r\n        updateRestaurant(props.restaurant.id, body)\r\n            .then(r => props.onEdited())\r\n            .catch(() => setError(true))\r\n\r\n        goBack()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                props.restaurant ? (\r\n                    <Row className='mt-3'>\r\n                        <Col>\r\n                            {error ? <div className=\"alert alert-danger\">Error while saving.</div> : ''}\r\n                            <Form>\r\n                                <Form.Group controlId=\"formBasicEmail\">\r\n                                    <Form.Label>Restaurant Name is:</Form.Label>\r\n                                    <Form.Control value={name} onChange={(e) => setName(e.target.value)} />\r\n                                    <Form.Text className=\"text-muted\">\r\n                                        You can edit/change current restaurant name.\r\n                                </Form.Text>\r\n                                </Form.Group>\r\n\r\n                                <Form.Group controlId=\"formBasicPassword\">\r\n                                    <Form.Label>Restaurant address is:</Form.Label>\r\n                                    <Form.Control value={address} onChange={(e) => setAddress(e.target.value)} />\r\n                                    <Form.Text className=\"text-muted\">\r\n                                        You can edit/change current restaurant address.\r\n                                </Form.Text>\r\n                                </Form.Group>\r\n                                <Button onClick={edit} variant=\"dark\" type=\"button\">\r\n                                    Submit edit\r\n                            </Button>\r\n                            </Form>\r\n                        </Col>\r\n                    </Row>\r\n                ) : ''\r\n            }\r\n        </div>\r\n    )\r\n}","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\Restaurants\\Meals.js",["163","164","165","166"],"import { useEffect, useState } from \"react\";\r\nimport { getMeals } from \"../../../api/meals\";\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport { CreateMeal } from \"./CreateMeal\";\r\nimport { IoMdTrash } from \"react-icons/io\";\r\nimport { deleteMeal } from '../../../api/meals'\r\n\r\n\r\nexport function Meals(props) {\r\n\r\n    const [err, setErr] = useState(false);\r\n\r\n    const handleDelete = (mealId) => {\r\n        deleteMeal(props.id, mealId)\r\n            .then(r => console.log(r.data))\r\n            .catch(() => setErr(true))\r\n\r\n        props.loadRestaurant()\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <CreateMeal loadRestaurant={props.loadRestaurant} id={props.id}></CreateMeal>\r\n            <Table className='mt-3' striped bordered hover variant=\"dark\">\r\n                <thead>\r\n                    <tr>\r\n                        <th>#</th>\r\n                        <th>Meal name</th>\r\n                        <th>Is available?</th>\r\n                        <th>Price</th>\r\n                        <th className='text-center'>Delete</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        (props.meals || []).map((m, i) => {\r\n                            return (\r\n                                <tr key={i}>\r\n                                    <td>{i + 1}</td>\r\n                                    <td>{m.name}</td>\r\n                                    <td>{m.available === true ? 'yes' : 'no'}</td>\r\n                                    <td>{`${m.price} $`}</td>\r\n                                    <td className='text-center'><IoMdTrash onClick={() => handleDelete(m.id)} color='grey' size='1.5em'></IoMdTrash></td>\r\n                                </tr>\r\n                            )\r\n                        })\r\n                    }\r\n                </tbody>\r\n            </Table>\r\n        </div>\r\n    )\r\n}","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\Restaurants\\CreateMeal.js",["167","168","169","170"],"import { useState } from 'react'\r\nimport { Form, Button, Row, Col } from 'react-bootstrap'\r\nimport '../../../styles/meals.css'\r\nimport { createMeal } from '../../../api/meals'\r\nimport { useParams } from 'react-router';\r\nimport { getMeals } from '../../../api/meals'\r\nimport { getRestaurant } from '../../../api/restaurants'\r\n\r\nexport function CreateMeal(props) {\r\n\r\n    const [name, setName] = useState('');\r\n    const [price, setPrice] = useState('');\r\n    const [checked, setChecked] = useState(false);\r\n    const [error, setError] = useState(false)\r\n\r\n\r\n    const handleCheck = () => {\r\n        if (checked === true) {\r\n            setChecked(false)\r\n        } else {\r\n            setChecked(true)\r\n        }\r\n    }\r\n\r\n    const resetForm = () => {\r\n        setName('');\r\n        setPrice('');\r\n        setChecked(false);\r\n    }\r\n\r\n    const handleMealCreation = () => {\r\n        const body = {\r\n            \"name\": name,\r\n            \"price\": price,\r\n            \"available\": checked\r\n        }\r\n\r\n        if (!name || !price) {\r\n            alert('please set name and price correctly')\r\n        } else {\r\n            createMeal(props.id, body)\r\n                .then(r => {\r\n                    resetForm()\r\n                    props.loadRestaurant()\r\n                    \r\n                })\r\n                .catch(() => setError(true))\r\n        }\r\n    }\r\n    console.log(name, price, checked)\r\n\r\n    return (\r\n        <Form id='form' className='w-100 form'>\r\n            <Form.Group className='mt-3'>\r\n                <Row>\r\n                    <Col>\r\n                        <h4>Create new meal:</h4>\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Control value={name} onChange={(e) => setName(e.target.value)} />\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Check checked={checked} onChange={(e) => handleCheck(e.target.checked)} className='mt-2' type=\"checkbox\" label=\"Check if available\" />\r\n                    </Col>\r\n                    <Col>\r\n                        <Form.Control value={price} onChange={(e) => setPrice(e.target.value)} type=\"number\" />\r\n                    </Col>\r\n                    <Col>\r\n                        <Button onClick={handleMealCreation} variant=\"dark\" type=\"button\">\r\n                            Create Meal\r\n                        </Button>\r\n                    </Col>\r\n                </Row>\r\n            </Form.Group>\r\n        </Form>\r\n    )\r\n}","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\api\\meals.js",[],"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\api\\api.js",[],"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\api\\orders.js",[],"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\constants\\index.js",[],"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\views\\footer.js",["171"],"import { Col, Row } from 'react-bootstrap';\r\nimport StickyFooter from 'react-sticky-footer';\r\nimport '../../../styles/footer.css'\r\n\r\nexport function Footer() {\r\n\r\n    const FooterFn = () => (<div className=\"footer\"> <p>This is some content in sticky footer</p> </div>);\r\n\r\n    return (\r\n        <StickyFooter\r\n            className='footerino'\r\n            bottomThreshold={10000}\r\n            normalStyles={{\r\n                backgroundColor: \"#999999\",\r\n                padding: \"1rem\"\r\n            }}\r\n            stickyStyles={{\r\n                backgroundColor: \"rgba(255,255,255,.8)\",\r\n                padding: \"0.1rem\"\r\n                \r\n            }}\r\n        >\r\n            <Row className='text-center footer'>\r\n                <Col>Author: <strong>Bandzi</strong></Col> <Col>Email: <strong>bgbrankoman@gmail.com</strong></Col>\r\n            </Row>\r\n\r\n        </StickyFooter>\r\n    )\r\n}","C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\admin\\components\\views\\Orders\\Orders.js",["172"],"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\public\\components\\views\\orders\\OrderCreate.js",["173","174","175"],"C:\\Users\\bgbra\\OneDrive\\Desktop\\project\\userhungry\\src\\public\\components\\orders\\Cart.js",["176"],"import { useState } from 'react';\r\nimport { Button, Form } from 'react-bootstrap';\r\nimport { Row, Col, Card } from 'react-bootstrap';\r\nimport { IoIosAdd , IoIosRemove } from \"react-icons/io\";\r\n\r\nexport function Cart(props) {\r\n    console.log(props.cartMeal)\r\n\r\n    const [quantity, setQuantity] = useState([...props.cartMeal])\r\n\r\n\r\n    // const handleQuantity = (add, remove) => {\r\n    //     if(add) {\r\n    //         setQuantity(...props.cartMeal, quantity +1)\r\n    //     }\r\n    //     if(remove && quantity > 0) {\r\n    //         setQuantity(...props.cartMeal, quantity +1)\r\n    //     }\r\n    // }\r\n    console.log(quantity)\r\n\r\n    return (\r\n        <Col xs lg='5'>\r\n            <Card>\r\n                <Card.Header>ORDER</Card.Header>\r\n                {\r\n                    props.cartMeal ? props.cartMeal.map((m, i) => {\r\n                        return (\r\n                            <Card.Body key={i}>\r\n                                <Row>\r\n                                    <Col md='7'>{props.meals.find(meal=>meal.id === m.mealId).name}</Col>\r\n                                    <Col md='3'><IoIosRemove onClick={()=>setQuantity({...props.cartMeal.map(o=> o.id === m.mealId ? quantity: props.cartMeal.quantity - 1)} )}/>{quantity.quantity}<IoIosAdd onClick={()=>setQuantity({...props.cartMeal.map(o=> o.id === m.mealId ? quantity: props.cartMeal.quantity + 1)})}/></Col>\r\n                                    <Col md='2'>{props.meals.find(meal=>meal.id === m.mealId).price} $</Col>\r\n                                </Row>\r\n                            </Card.Body>\r\n                        )\r\n                    }) : ''\r\n                }\r\n                <Card.Footer><Form.Control placeholder='Customer name'></Form.Control></Card.Footer>\r\n            </Card>\r\n        </Col>\r\n    )\r\n}",{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","severity":1,"message":"182","line":22,"column":8,"nodeType":"183","endLine":22,"endColumn":10,"suggestions":"184"},{"ruleId":"181","severity":1,"message":"182","line":19,"column":8,"nodeType":"183","endLine":19,"endColumn":10,"suggestions":"185"},{"ruleId":"186","severity":1,"message":"187","line":8,"column":22,"nodeType":"188","messageId":"189","endLine":8,"endColumn":33},{"ruleId":"181","severity":1,"message":"182","line":25,"column":8,"nodeType":"183","endLine":25,"endColumn":10,"suggestions":"190"},{"ruleId":"181","severity":1,"message":"191","line":17,"column":8,"nodeType":"183","endLine":17,"endColumn":10,"suggestions":"192"},{"ruleId":"181","severity":1,"message":"193","line":23,"column":8,"nodeType":"183","endLine":23,"endColumn":10,"suggestions":"194"},{"ruleId":"186","severity":1,"message":"195","line":2,"column":10,"nodeType":"188","messageId":"189","endLine":2,"endColumn":16},{"ruleId":"186","severity":1,"message":"196","line":6,"column":10,"nodeType":"188","messageId":"189","endLine":6,"endColumn":24},{"ruleId":"186","severity":1,"message":"197","line":7,"column":24,"nodeType":"188","messageId":"189","endLine":7,"endColumn":32},{"ruleId":"186","severity":1,"message":"198","line":15,"column":13,"nodeType":"188","messageId":"189","endLine":15,"endColumn":22},{"ruleId":"186","severity":1,"message":"199","line":29,"column":11,"nodeType":"188","messageId":"189","endLine":29,"endColumn":27},{"ruleId":"186","severity":1,"message":"195","line":1,"column":17,"nodeType":"188","messageId":"189","endLine":1,"endColumn":23},{"ruleId":"186","severity":1,"message":"200","line":3,"column":10,"nodeType":"188","messageId":"189","endLine":3,"endColumn":14},{"ruleId":"186","severity":1,"message":"201","line":1,"column":10,"nodeType":"188","messageId":"189","endLine":1,"endColumn":19},{"ruleId":"186","severity":1,"message":"202","line":2,"column":10,"nodeType":"188","messageId":"189","endLine":2,"endColumn":18},{"ruleId":"186","severity":1,"message":"195","line":3,"column":17,"nodeType":"188","messageId":"189","endLine":3,"endColumn":23},{"ruleId":"186","severity":1,"message":"203","line":11,"column":12,"nodeType":"188","messageId":"189","endLine":11,"endColumn":15},{"ruleId":"186","severity":1,"message":"204","line":5,"column":10,"nodeType":"188","messageId":"189","endLine":5,"endColumn":19},{"ruleId":"186","severity":1,"message":"202","line":6,"column":10,"nodeType":"188","messageId":"189","endLine":6,"endColumn":18},{"ruleId":"186","severity":1,"message":"205","line":7,"column":10,"nodeType":"188","messageId":"189","endLine":7,"endColumn":23},{"ruleId":"186","severity":1,"message":"206","line":14,"column":12,"nodeType":"188","messageId":"189","endLine":14,"endColumn":17},{"ruleId":"186","severity":1,"message":"207","line":7,"column":11,"nodeType":"188","messageId":"189","endLine":7,"endColumn":19},{"ruleId":"186","severity":1,"message":"206","line":7,"column":9,"nodeType":"188","messageId":"189","endLine":7,"endColumn":14},{"ruleId":"186","severity":1,"message":"208","line":4,"column":10,"nodeType":"188","messageId":"189","endLine":4,"endColumn":15},{"ruleId":"186","severity":1,"message":"209","line":6,"column":35,"nodeType":"188","messageId":"189","endLine":6,"endColumn":39},{"ruleId":"181","severity":1,"message":"210","line":45,"column":8,"nodeType":"183","endLine":45,"endColumn":10,"suggestions":"211"},{"ruleId":"186","severity":1,"message":"195","line":2,"column":10,"nodeType":"188","messageId":"189","endLine":2,"endColumn":16},"no-native-reassign",["212"],"no-negated-in-lhs",["213"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'pollId'. Either include it or remove the dependency array.","ArrayExpression",["214"],["215"],"no-unused-vars","'IoIosCreate' is defined but never used.","Identifier","unusedVar",["216"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["217"],"React Hook useEffect has a missing dependency: 'loadRestaurant'. Either include it or remove the dependency array.",["218"],"'Button' is defined but never used.","'EditRestaurant' is defined but never used.","'IoPencil' is defined but never used.","'clickedID' is assigned a value but never used.","'handleEditButton' is assigned a value but never used.","'Link' is defined but never used.","'useEffect' is defined but never used.","'getMeals' is defined but never used.","'err' is assigned a value but never used.","'useParams' is defined but never used.","'getRestaurant' is defined but never used.","'error' is assigned a value but never used.","'FooterFn' is assigned a value but never used.","'Meals' is defined but never used.","'Card' is defined but never used.","React Hook useEffect has missing dependencies: 'pollId' and 'winner.id'. Either include them or remove the dependency array.",["219"],"no-global-assign","no-unsafe-negation",{"desc":"220","fix":"221"},{"desc":"220","fix":"222"},{"desc":"220","fix":"223"},{"desc":"224","fix":"225"},{"desc":"226","fix":"227"},{"desc":"228","fix":"229"},"Update the dependencies array to be: [pollId]",{"range":"230","text":"231"},{"range":"232","text":"231"},{"range":"233","text":"231"},"Update the dependencies array to be: [dispatch]",{"range":"234","text":"235"},"Update the dependencies array to be: [loadRestaurant]",{"range":"236","text":"237"},"Update the dependencies array to be: [pollId, winner.id]",{"range":"238","text":"239"},[666,668],"[pollId]",[565,567],[828,830],[538,540],"[dispatch]",[790,792],"[loadRestaurant]",[1365,1367],"[pollId, winner.id]"]